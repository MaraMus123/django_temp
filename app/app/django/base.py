"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'secret-key-placeholder')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(os.environ.get('DJANGO_DEBUG', 1))

ALLOWED_HOSTS = [] if DEBUG else os.environ.get('DJANGO_ALLOWED_HOSTS', '').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home',
    'core',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

USERS_DB = {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': os.environ.get('USERS_NAME', 'users_db'),
    'USER': os.environ.get('USERS_USER', 'appuser'),
    'PASSWORD': os.environ.get('USERS_PASSWORD', 'secret'),
    'HOST': os.environ.get('USERS_HOST', 'users_db'),  # service name in compose OR real hostname
    'PORT': os.environ.get('USERS_PORT', '5432'),
    'CONN_MAX_AGE': 60,
}

IMAGES_DB = {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': os.environ.get('IMAGES_NAME', 'images_db'),
    'USER': os.environ.get('IMAGES_USER', 'appuser2'),
    'PASSWORD': os.environ.get('IMAGES_PASSWORD', 'secret2'),
    'HOST': os.environ.get('IMAGES_HOST', 'images_db'),  # compose service name
    'PORT': os.environ.get('IMAGES_PORT', '5432'),
    'CONN_MAX_AGE': 60,
}

REMOTE_DB = {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': os.environ.get('REMOTE_NAME', 'remote_db'),
    'USER': os.environ.get('REMOTE_USER', 'remote_user'),
    'PASSWORD': os.environ.get('REMOTE_PASSWORD', 'remote_pw'),
    'HOST': os.environ.get('REMOTE_HOST', 'db.example.com'),  # public/private IP or DNS of the other server
    'PORT': os.environ.get('REMOTE_PORT', '5432'),
    'CONN_MAX_AGE': 60,
    'OPTIONS': {
        # secure by default; see ยง4 for verify-full
        'sslmode': os.environ.get('REMOTE_SSLMODE', 'disable'),
        # 'sslrootcert': '/app/certs/ca.crt',
    },
}

DATABASES = {
    'default': USERS_DB,  # default database for Django
    'users_db': USERS_DB,
    'images_db': IMAGES_DB,
    'remote_db': REMOTE_DB,
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = "/vol/static"
MEDIA_URL = "/media/"
MEDIA_ROOT = "/vol/media"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

DATABASE_ROUTERS = [
    'routers.db_routers.AuthRouter',
    'routers.db_routers.ImagesRouter',
    ]
